#ylim(7,18)
ggplot(data=weekdays_df)+
geom_point(aes(x=day_type,y = user_count)
ggplot(data=weekdays_df)+
geom_point(aes(x=day_type,y = user_count))
ggplot(data=weekdays_df)+
geom_point(aes(x=day_type,y = user_count))+
geom_jitter(aes(x=day_type,y = user_count)
ggplot(data=weekdays_df)+
geom_point(aes(x=day_type,y = user_count))+
geom_jitter(aes(x=day_type,y = user_count))
ggplot(data=weekdays_df)+
geom_point(aes(x=day_type,y = user_count))#+
#  geom_jitter(aes(x=day_type,y = user_count))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(janitor)
activity_sleep_weight <- read_csv("./Data/cleaned_data/activity_sleep_weight_daily_joined_08_05_2022_v02.csv")
head(activity_sleep_weight)
str(activity_sleep_weight)
summary(activity_sleep_weight)
active_dormant <- data.frame(users_activity = c("Active", "Dormant"),
users_count = c(24,10),
users_percent = c(round((24/34)*100),round((10/34)*100)),
users_percent_lbl = c(str_c(round((24/34)*100),"%"),str_c(round((10/34)*100),"%")))
active_dormant
table_sumarry <- activity_sleep_weight %>% group_by(id) %>%
summarise(days_count = n(), avg_steps = mean(total_steps), avg_sleep = mean(total_hours_asleep))
table_sumarry
users_percent <-data.frame(days_range =c("1 Week","2 Weeks", "3 Weeks","4 Weeks"), user_count= c(0,0,0,0))
counter_1_wk <- 0
counter_2_wks <- 0
counter_3_wks <- 0
counter_4_wks <- 0
for (i in table_sumarry$days_count){
if (1<= i & i <= 7){
users_percent[1,]['days_range'] <- "1-7"
counter_1_wk <- counter_1_wk+ 1
users_percent[1,]['user_count'] <- counter_1_wk
}
else if (8 <= i & i <= 14){
users_percent[2,]['days_range'] <- "8-14"
counter_2_wks <- counter_2_wks + 1
users_percent[2,]['user_count'] <- counter_2_wks
}
else if (15 <= i & i <= 21){
users_percent[3,]['days_range'] <- "15-21"
counter_3_wks <- counter_3_wks + 1
users_percent[3,]['user_count'] <- counter_3_wks
}
else if (22 <= i & i <= 31){
users_percent[4,]['days_range'] <- "22-31"
counter_4_wks <- counter_4_wks + 1
users_percent[4,]['user_count'] <- counter_4_wks
}
}
users_percent
users_percent$user_percentage <- round((users_percent$user_count/24)*100,1)
users_percent$user_percentage_lbl <- str_c(users_percent$user_percentage,"%")
users_percent
users_percent <- users_percent[order(users_percent$user_percentage, decreasing = TRUE),]
users_percent
barplot(users_percent$user_count, names.arg = users_percent$days_range,
xlab = "Days count range", ylab = "Number of Users",
col = "darkblue", main = "Active users Vs number of days they used the device",
font.main = 1 )
png(file="Piechart_users_days.png")
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
users_per_day <- activity_sleep_weight %>%
group_by(activity_date) %>%
summarise(users_count = n())
users_per_day
ggplot(data = users_per_day, aes(x= activity_date, y = users_count)) +
geom_line()+
ggtitle("Active users per day")+
xlab("Day")+
ylab("Number of users")
users_log_weight <- activity_sleep_weight %>% filter(weight_kg >=1)
weight_logs <- users_log_weight %>%
group_by(id) %>%
summarise(weight_logs_count = n())
weight_logs
weight_logs_count <- nrow(weight_logs)
no_weight_logs_count <- nrow(table_sumarry)-nrow(weight_logs)
total_users <- nrow(table_sumarry)
weight_logs_perc <- round((weight_logs_count/total_users)*100,0)
no_weight_logs_perc <- round(no_weight_logs_count/total_users*100,0)
total_percent <- weight_logs_perc+ no_weight_logs_perc
users_summary_weight <- data.frame(users_behavior = c("weight logged","no weight logged","total"),
users_count = c(weight_logs_count,no_weight_logs_count,total_users),
users_perc = c(weight_logs_perc,no_weight_logs_perc,total_percent))
users_summary_weight
users_summary_weight_no_tatal <- users_summary_weight %>% filter(users_perc < 100)
View(users_summary_weight_no_tatal)
users_summary_weight_no_tatal$users_perc_lbl <- str_c(users_summary_weight_no_tatal$users_perc,"%")
users_summary_weight_no_tatal
pie(users_summary_weight_no_tatal$users_perc,
labels = users_summary_weight_no_tatal$users_perc_lbl,
col = c("green","red"),
main = "Active Users and Weight logs")
png("Active_users_perday.png")
ggplot(data = users_per_day, aes(x= activity_date, y = users_count)) +
geom_line()+
ggtitle("Active users per day")+
xlab("Day")+
ylab("Number of users")
dev.off()
png(file="Piechart_users_days.png", width = 300, height = 200)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
png(file="Piechart_users_days.png", width = 2000, height = 1800)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
png(file="Piechart_users_days.png", width = 1000, height = 1000)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
png(file="Piechart_users_days.png", width = 800, height = 800)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
png(file="Piechart_users_days.png", width = 500, height = 500)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
dev.off()
#png(file="Piechart_users_days.png", width = 500, height = 500)
ggplot(users_percent, aes(x=1, y = user_percentage, fill= fct_inorder(days_range) )) +
geom_col() +
geom_text(aes(label= user_percentage_lbl),
position= position_stack(vjust = .5),
color = c("white","white",1,1)) +
labs(title = "Users and the number of days they used the device",
subtitle = "N=24",
caption = "users used their device at least once ONLY COUNTS")+
scale_fill_viridis_d()+
scale_fill_discrete(name= "Days Count")+
coord_polar(theta = "y")+
theme_void() +
theme( plot.title = element_text(hjust = .5, size = 9 ),
plot.subtitle = element_text(hjust = 0.5, size = 8),
plot.caption = element_text(hjust = 1, size = 8))
#dev.off()
png("Active_users_perday.png", width = 800, hight= 500)
png("Active_users_perday.png", width = 800, height = = 500)
png("Active_users_perday.png", width = 800, height = 500)
ggplot(data = users_per_day, aes(x= activity_date, y = users_count)) +
geom_line()+
ggtitle("Active users per day")+
xlab("Day")+
ylab("Number of users")
dev.off()
#png("Active_users_perday.png", width = 800, height = 500)
ggplot(data = users_per_day, aes(x= activity_date, y = users_count)) +
geom_line()+
ggtitle("Active users per day")+
xlab("Day")+
ylab("Number of users")
#dev.off()
png("Active_Users_and_Weight_logs.png", width = 400, height = 400)
pie(users_summary_weight_no_tatal$users_perc,
labels = users_summary_weight_no_tatal$users_perc_lbl,
col = c("green","red"),
main = "Active Users and Weight logs")
dev.off()
#png("Active_Users_and_Weight_logs.png", width = 400, height = 400)
pie(users_summary_weight_no_tatal$users_perc,
labels = users_summary_weight_no_tatal$users_perc_lbl,
col = c("green","red"),
main = "Active Users and Weight logs")
#dev.off()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(janitor)
activity_sleep_weight <- read_csv("./Data/cleaned_data/activity_sleep_weight_daily_joined_08_05_2022_v02.csv")
head(activity_sleep_weight)
users_per_day <- activity_sleep_weight %>%
group_by(activity_date) %>%
summarise(users_count = n())
users_per_day
mean_users_count = mean(users_per_day$users_count)
sd_users_count = sd(users_per_day$users_count)
x__ = rnorm(31, mean = mean_users_count, sd = sd_users_count)
ggplot(data = users_per_day) +
geom_histogram(aes(x= as.integer(users_count)), binwidth = .5)+
geom_density(aes(x = x__ ), colour = "red", show.legend = FALSE)+
geom_point(aes(x = mean_users_count, y = 0 ), colour = "red")+
geom_point(aes(x = mean_users_count + sd_users_count, y = 0), colour = "green")+
geom_point(aes(x = mean_users_count - sd_users_count, y = 0), colour = "green")+
xlim(9,18)+
xlab(" Number of active users")+
ylab("Frequency")+
ggtitle("Distribution of Active users per day",
subtitle = "N = 24 \n Duration: 13 Apr to 13 May")
ggplot(data = users_per_day) +
geom_density(aes(x = as.integer(users_count) ), colour = "red", show.legend = FALSE)+
xlim(9,18)+
xlab(" Number of active users")+
ylab("Density")+
ggtitle("Density of Active users per day",
subtitle = "N = 24 \n Duration: 13 Apr to 13 May")
activity_sleep_weight$weekday <- weekdays(activity_sleep_weight$activity_date)
activity_sleep_weight$weekday <- factor(activity_sleep_weight$weekday, levels = c("Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday"))
activity_sleep_weight_orderd <- activity_sleep_weight[order(activity_sleep_weight$weekday),]
activity_sleep_weight_orderd
weekdays_df <- activity_sleep_weight_orderd %>%
group_by(activity_date,weekday) %>% summarise(user_count= n())
weekdays_df
ggplot(data=weekdays_df)+
geom_boxplot(aes(x=weekday,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4)+
ylim(7,18)
weekdays_df_2 <- weekdays_df
weekdays_df_2$day_type <- "W"
weekdays_df_2
Tue_Fri <- c(
"Tuesday", "Wednesday", "Thursday", "Friday")
Sat_Sun <- c("Saturday","Sunday")
for (i in 1:31){
#print(i)
if (weekdays_df_2$weekday[i] %in% Tue_Fri){
print(i)
weekdays_df_2[i,]["day_type"] <- "Tue_Fri"
}
if (weekdays_df_2$weekday[i] %in% Sat_Sun){
weekdays_df_2[i,]["day_type"] <- "Sat_Sun"
}
if (weekdays_df_2$weekday[i] == "Monday"){
weekdays_df_2[i,]["day_type"] <- "Monday"
}
i = i + 1
}
weekdays_df_2
png("weekdays_andnumber_ofUsers_hypothesis.png")
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4)
#ylim(7,18)
dev.off()
weekdays_test_df <- weekdays_df_2 %>%
select(user_count,day_type)
weekdays_test_df <- weekdays_test_df %>%
subset(select= -activity_date)
weekdays_test_df
weekdays_test_df %>% group_by(day_type) %>%
summarise(sum=n())
Sat_Sun_subset <- weekdays_test_df %>%
filter(day_type == "Sat_Sun")
Tue_Fri_subset <- weekdays_test_df %>%
filter(day_type == "Tue_Fri")
Monday_subset <- weekdays_test_df %>%
filter(day_type == "Monday")
Sat_Sun_subset
Tue_Fri_subset
Monday_subset
Sat_Sun_sample <- sample_n(Sat_Sun_subset,4)
Tue_Fri_sample <- sample_n(Tue_Fri_subset,4)
Tue_Fri_sample_8 <- sample_n(Tue_Fri_subset,8)
Sat_Sun_sample
Tue_Fri_sample
Monday_subset
Tue_Fri_sample_8
Sat_Sun_subset
Sat_Tue_test_df <-rbind(Sat_Sun_subset, Tue_Fri_sample_8)
Tue_Monday_test_df <-rbind(Tue_Fri_sample, Monday_subset)
Sat_Monday_test_df <-rbind(Sat_Sun_sample, Monday_subset)
Sat_Tue_test_df
Sat_Monday_test_df
Tue_Monday_test_df
Sat_Tue_test_df
Sat_Monday_test_df
Tue_Monday_test_df
#write.csv(Sat_Tue_test_df, "./Data/cleaned_data/Sat_Tue_test_df_28_05_2022_v01.csv",row.names = FALSE)
#write.csv(Sat_Monday_test_df, "./Data/cleaned_data/Sat_Monday_test_df_28_05_2022_v01.csv",row.names = FALSE)
#write.csv(Tue_Monday_test_df, "./Data/cleaned_data/Tue_Monday_test_df_28_05_2022_v01.csv",row.names = FALSE)
Sat_Tue_test_df_csv <- read.csv("./Data/cleaned_data/Sat_Tue_test_df_28_05_2022_v01.csv")
Sat_Monday_test_df_csv <- read.csv("./Data/cleaned_data/Sat_Monday_test_df_28_05_2022_v01.csv")
Tue_Monday_test_df_csv <- read.csv("./Data/cleaned_data/Tue_Monday_test_df_28_05_2022_v01.csv")
#attach(Sat_Tue_test_df_csv)
Sat_Tue_test_df_csv$day_type <- factor(Sat_Tue_test_df_csv$day_type, c("Sat_Sun","Tue_Fri"), labels = c(1,2))
Sat_Monday_test_df_csv$day_type <- factor(Sat_Monday_test_df_csv$day_type, c("Sat_Sun","Monday"), labels = c(1,3))
Tue_Monday_test_df_csv$day_type <- factor(Tue_Monday_test_df_csv$day_type, c("Tue_Fri","Monday"), labels = c(2,3))
str(Sat_Tue_test_df_csv)
str(Sat_Monday_test_df_csv)
str(Tue_Monday_test_df_csv)
Sat_Tue_test_df_csv
Sat_Monday_test_df_csv
Tue_Monday_test_df_csv
Sat_Tue_test_df_csv %>% group_by(day_type)%>% summarise(median_data= median(user_count), iqr=IQR(user_count))
Sat_Tue_test_df_csv
x_Sat_Sun <- filter(Sat_Tue_test_df_csv,day_type == "1")
x_Tue_Fri <- filter(Sat_Tue_test_df_csv,day_type == "2")
par(mfrow = c(1,2))
hist(x_Sat_Sun$user_count)
hist(x_Tue_Fri$user_count)
wilcox.test(Sat_Tue_test_df_csv$user_count~Sat_Tue_test_df_csv$day_type)
Sat_Monday_test_df_csv %>% group_by(day_type)%>% summarise(median_data= median(user_count), iqr=IQR(user_count))
Sat_Monday_test_df_csv
x_Sat_Sun_2 <- filter(Sat_Monday_test_df_csv,day_type == "1")
x_Monday <- filter(Sat_Monday_test_df_csv,day_type == "3")
x_Sat_Sun_2
par(mfrow = c(1,2))
hist(x_Sat_Sun_2$user_count)
hist(x_Monday$user_count)
wilcox.test(Sat_Monday_test_df_csv$user_count~Sat_Monday_test_df_csv$day_type)
Tue_Monday_test_df_csv %>% group_by(day_type)%>% summarise(median_data= median(user_count), iqr=IQR(user_count))
Sat_Monday_test_df_csv
x_Sat_Sun_3 <- filter(Sat_Monday_test_df_csv,day_type == "1")
x_Monday <- filter(Sat_Monday_test_df_csv,day_type == "3")
x_Sat_Sun_3
par(mfrow = c(1,2))
hist(x_Sat_Sun_2$user_count)
hist(x_Monday$user_count)
wilcox.test(Tue_Monday_test_df_csv$user_count~Tue_Monday_test_df_csv$day_type)
png("weekdays_andnumber_ofUsers_hypothesis.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4)
#ylim(7,18)
dev.off()
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4)
title("Distribution of number of users")
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4)
ggplot.title("Distribution of number of users")
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4, title="Distribution of number of users" )
#ylim(7,18)
dev.off()
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4) +
ggtitle("Distribution of number of users")
#ylim(7,18)
dev.off()
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4) +
xlab("Days")+
ylab("Number of Users")+
ggtitle("Distribution of number of users")
#ylim(7,18)
dev.off()
png("Distribution of number of users.png",
width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4) +
xlab("Days")+
ylab("Number of Active Users")+
ggtitle("Distribution of number of users")
#ylim(7,18)
dev.off()
#png("Distribution of number of users.png",
#    width = 800, height = 500)
ggplot(data=weekdays_df_2)+
geom_boxplot(aes(x=day_type,y = user_count),
outlier.colour="red",
outlier.shape=8,
outlier.size=4) +
xlab("Days")+
ylab("Number of Active Users")+
ggtitle("Distribution of number of users")
#ylim(7,18)
#dev.off()
par(mfrow = c(1,2))
hist(x_Sat_Sun$user_count)+ggtitle("Saturday-Sunday ")
par(mfrow = c(1,2))
hist(x_Sat_Sun$user_count)
hist(x_Tue_Fri$user_count)
par(mfrow = c(1,2))
hist(x_Sat_Sun$user_count , main = "Saturday to Sunday")
hist(x_Tue_Fri$user_count, main = "Tuesday to Friday")
par(mfrow = c(1,2))
hist(x_Sat_Sun$user_count , main = "Saturday to Sunday", xlab = "Active Users")
hist(x_Tue_Fri$user_count, main = "Tuesday to Friday", xlab = "Active Users")
par(mfrow = c(1,2))
hist(x_Sat_Sun_2$user_count, main = "Saturday to Sunday", xlab = "Active Users")
hist(x_Monday$user_count, main = "Monday", xlab = "Active Users")
par(mfrow = c(1,2))
hist(x_Sat_Sun_2$user_count, main = "Saturday to Sunday", xlab = "Active Users")
hist(x_Monday$user_count, main = "Monday", xlab = "Active Users")
x_Sat_Sun_2
load.image("Piechart_users_days.png")
library(imager)
install.packages(imager)
install.packages("imager")
library(imager)
load.image("Piechart_users_days.png")
pie_img<- load.image("Piechart_users_days.png")
plot(pie_img)
